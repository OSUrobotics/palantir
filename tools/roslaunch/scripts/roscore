#!/usr/bin/env python
# Software License Agreement (BSD License)
#
# Copyright (c) 2008, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of Willow Garage, Inc. nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import sys
from optparse import OptionParser

NAME = 'roscore'


def _palantir_write(palantir_file_name, input):
  palantir_file_var = open(palantir_file_name, "w")
  palantir_file_var.write(input)
  print("Creating file " + palantir_file_name)

def _palantir_check():
  """
  Checks whether or not a ~/.ros/palantir_settings file exists.
  If it does, check the level of opt-in.
  If it doesn't, see if the user would like to opt-in.
  """
  import rospkg
  import os.path
  log_dir = rospkg.get_ros_home()
  palantir_file_name = log_dir + "/palantir_settings"
  print palantir_file_name
  if os.path.isfile(palantir_file_name):
    palantir_file_var = open(palantir_file_name, 'r')
    contents = palantir_file_var.readline().rstrip()
    import os
    print contents
    os.environ['ROS_PALANTIR'] = contents
    contents = palantir_file_var.readline().rstrip()
    os.environ['ROS_PALANTIR_USERNAME'] = contents
    contents = palantir_file_var.readline().rstrip()
    os.environ['ROS_PALANTIR_PASSWORD'] = contents
  else:
    inquiry_complete = False
    while not inquiry_complete:
      print("ROSPalantir is an instrumented version of roscore, the central broker agent at the heart of a ROS system.")
      print("It allows live usage statistics on nodes and communications to be recorded, saved to disk, and sent back to an aggregating server at Oregon State University.")
      var = raw_input("Would you like you anonymously log usage statistics? (y/n) ")
      if var == "y":
        print("Thank you! What level of usage statistics would you like to log?")
        print("1:IP Address, MAC Address, and all usage statistics")
        print("2: IP Address, and all usage statistics")
        print("3: Just all usage stistics")
        opt_in_level = raw_input("Which level would you like? (1,2, or 3):")
        while not inquiry_complete:
          if opt_in_level == "1" or opt_in_level == "2" or opt_in_level == "3":
            inquiry_complete = True
          else:
            print("Input incorrect")
        user_name = raw_input("What would you like your user name to be? This is for looking up your own private data in the future.\n")
        password = raw_input("What would you like password to be? This is not encrypted, do not use a password that you use for important things.\n")
        file_output = opt_in_level + '\n' + user_name + '\n' + password
        _palantir_write(palantir_file_name, file_output)
      
      elif var == "n":
        _palantir_write(palantir_file_name, "None")
        print ("Thank you!")
        inquiry_complete = True
      else:
        print("Input incorrect") 

def _get_optparse():

    parser = OptionParser(usage="usage: %prog [options]",
                          prog=NAME,
                          description="roscore will start up a ROS Master, a ROS Parameter Server and a rosout logging node",
                          epilog="See http://www.ros.org/wiki/roscore"
                          )
    parser.add_option("-p", "--port",
                      dest="port", default=None,
                      help="master port. Only valid if master is launched", metavar="PORT")
    parser.add_option("-v", action="store_true",
                      dest="verbose", default=False,
                      help="verbose printing")
    return parser


parser = _get_optparse()
(options, args) = parser.parse_args(sys.argv[1:])

_palantir_check()

if len(args) > 0:
    parser.error("roscore does not take arguments")


import roslaunch
roslaunch.main(['roscore', '--core'] + sys.argv[1:])
